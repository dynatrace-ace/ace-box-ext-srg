---
- include_role:
    name: config-v2
    tasks_from: set-var
  vars:
    var_key_to_set: "demo_quality_gates_gitlab"
    var_value_to_set: true

- include_role:
    name: microk8s

- include_role:
    name: dt-activegate-classic
  vars:
    activegate_install_synthetic: true

- include_role:
    name: dt-operator

- include_role:
    name: "monaco-2.0"

- include_role:
    name: gitlab
  vars:
    automation_type: "cloud-automation" #"srg" #srg/cloud-automation

- name: Gitlab - Ensure Group
  include_role:
    name: gitlab
    tasks_from: ensure-group
  vars:
    gitlab_group_name: "{{ gitlab_demo_default_group }}"

- name: Gitlab - Ensure Project
  include_role:
    name: gitlab
    tasks_from: ensure-project
  vars:
    gitlab_prj: "{{ gitlab_demo_default_repo_name }}"
    gitlab_prj_namespace_id: "{{ gitlab_group_id }}"

# - name: Gitlab - Add Group Variable
#   include_role:
#     name: gitlab
#     tasks_from: ensure-group-var
#   vars:
#     gitlab_var_key: "{{ item.key }}"
#     gitlab_var_value: "{{ item.value }}"
#   loop:
#     - { key: 'CLOUD_AUTOMATION_API_TOKEN', value: '{{ ca_api_token | default(None) }}' }
#     - { key: 'CLOUD_AUTOMATION_ENDPOINT', value: '{{ ca_endpoint | default(None) | replace("/api","") }}' }
#     - { key: 'AUTOMATION_TYPE', value: '{{ automation_type | default("srg") }}' }

- include_role:
    name: app-simplenode
  vars:
    git_username: "root"
    git_password: "{{ gitlab_password }}"
    git_domain: "{{ gitlab_domain }}"
    git_remote: "gitlab"
    git_org_name: "{{ gitlab_demo_default_group }}"
    repo_name: "{{ gitlab_demo_default_repo_name }}"
  when: new_gitlab_group_created is defined and new_gitlab_group_created == true

# Include use case specific Dahboard values
- set_fact:
    include_dashboard_value_file: "{{ role_path }}/templates/demo-quality-gates-gitlab-dashboard.yml.j2"

- include_role:
    name: dashboard
    tasks_from: template-values-file

- include_role:
    name: dashboard
